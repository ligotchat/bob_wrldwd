/* ... (previous CSS code - CSS Variables, body, header, main, footer styles) ... */

/* --- Colored Squares Styles --- */
.colored-squares-section {
    margin-bottom: var(--spacing-unit);
    padding: var(--spacing-unit);
    background-color: white;
    border-radius: 0.5em;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.squares-container {
    display: flex; /* Use flexbox to arrange squares horizontally */
    justify-content: space-around; /* Distribute space evenly */
    align-items: center; /* Vertically align items in the center */
    margin-bottom: var(--spacing-unit);
}

.square {
    width: 80px;      /* Set square width */
    height: 80px;     /* Set square height (equal to width for a square) */
    border-radius: 10px; /* Slightly rounded corners */
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2); /* Shadow for depth */
}

/* Different square colors - you can customize these */
.square-blue {
    background-color: #007BFF;
}

.square-red {
    background-color: #DC3545;
}

.square-green {
    background-color: #28A745;
}

.square-yellow {
    background-color: #FFC107;
}

/* --- Interactive Scrolling Effects --- */

/* 2a. Sticky Header (Basic) */
header {
    /* ... (existing header styles) ... */
    position: sticky; /* Make header sticky */
    top: 0;          /* Stick to the top of the viewport */
    z-index: 100;     /* Ensure it's above other content if needed */
}

/* 2b. Parallax Background (Simple Example - apply to body or a section) */
body {
    /* ... (existing body styles) ... */
    background-image: url('images/your-background-image.jpg'); /* Replace with your image URL */
    background-attachment: fixed; /* Fixed background for parallax effect */
    background-size: cover;      /* Cover the entire viewport */
    background-position: center;  /* Center the background image */
}

/* Ensure content is readable over background - adjust as needed */
body::before { /* Pseudo-element to add a semi-transparent overlay */
    content: "";
    position: fixed; /* Cover the whole viewport */
    top: 0; left: 0; width: 100%; height: 100%;
    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent white */
    z-index: -1; /* Place overlay behind content */
}

/* 2c. Scroll-Triggered Animations (Conceptual - Requires JavaScript for real animation) */
/*  For actual animations, you'd typically use JavaScript to detect scroll position
    and add/remove CSS classes to elements to trigger animations.

    Example (Conceptual CSS - would need JS to activate):
    .fade-in {
        opacity: 0;
        transition: opacity 1s ease-out;
    }

    .fade-in.active {  <- JavaScript would add/remove 'active' class on scroll
        opacity: 1;
    }
*/
